[
  {
    "id": "13",
    "name": "MBQ Questionnaire @ UQ",
    "description": "A web-base questionnaire for parent to assess their children's behaviours",
    "skills": "Node.js, Express.js, Git",
    "image": "/img/mbq-home.png",
    "images": [
      "/img/mbq-home.png",
      "/img/mbq-result.png",
      "/img/mbq-guidelines.png",
      "/img/mbq-index.png",
      "/img/mbq-graph.png"
    ],
    "detailedDescription": [

    ]
  },
  {
    "id": "12",
    "name": "AI Assistant @ Desygner",
    "description": "Integrate OpenAI's function calling feature into Desygner platform",
    "skills": "Python, OpenAI, Llama Index, RAG, Redis",
    "image": "/img/desygner-chat1.png",
    "images": [
      "/img/desygner-chat1.png",
      "/img/desygner-chat2.png",
      "/img/desygner-chat3.png",
      "/img/desygner-result.png"
    ],
    "detailedDescription": [
      {
        "type": "title",
        "content": "Overview"
      },
      {
        "type": "paragraph",
        "content": "Integrated AI functionality into the platform ecosystem by leveraging OpenAIâ€™s function calling feature, Llama Index, and proprietary APIs. Enabled users to chat with AI agent to perform actions such as creating design templates and elements."
      }
    ]
  },
  {
    "id": "11",
    "name": "AQademy",
    "description": "An online discussion forum",
    "skills": "PHP, AJAX, jQuery Bootstrap, MySQL, MongoDB, MVC, Docker, Kubernetes, GCP",
    "image": "/img/aqademy.png",
    "images": [
      "/img/aqademy-uiux.png",
      "/img/aqademy-login.png",
      "/img/aqademy-search.png",
      "/img/aqademy-k8s.JPG"
    ],
    "detailedDescription": [
      {
        "type": "title",
        "content": "Introduction"
      },
      {
        "type": "paragraph",
        "content": "AQademy is an online discussion platform that empowers students to ask questions and participate in forum-based discussions. Instructors can moderate discussions and endorse accurate answers, and students can upvote the answers they find helpful. This platform aims to enhance student engagement and promote active learning, revolutionizing the way students interact with their coursework."
      },
      {
        "type": "title",
        "content": "Features"
      },
      {
        "type": "paragraph",
        "content": "This web-based application project implemented the MVC design pattern and deployed on the UQCloud. It was designed with a variety of features that aim to enhance the user experience. Users can post questions anonymously or with their names, and only the teaching team has the authority to make them private and viewable. Additionally, our platform allows users to like, comment, and post questions, and upvote answers."
      },
      {
        "type": "paragraph",
        "content": "Each course has its discussion forum, students can enroll in courses to post questions and answer questions. Users can search for relevant posts by using keywords or filters such as most upvoted, most recent, most comments, etc. Moreover, they can also comment on a post, or bookmark a post to receive notifications about updates."
      },
      {
        "type": "paragraph",
        "content": "This project utilised HTML, CSS, JavaScript, jQuery, Bootstrap, and AJAX to develop a responsive frontend interface with an intuitive user experience. The backend was developed by using PHP, CodeIgniter, and MySQL to process requests, communicate with the database, and generate dynamic content on the client side."
      },
      {
        "type": "title",
        "content": "Functionalities"
      },
      {
        "type": "list",
        "items": [
          "Login",
          "Registration",
          "User profile",
          "Cookies",
          "Search box autocompletion",
          "Bookmarking",
          "Google reCAPTCHA",
          "Writing comments",
          "Password hashcode",
          "Adding posts",
          "Rating",
          "User profile updating",
          "Basic file uploading",
          "Authorization",
          "Drag and drop for file uploading",
          "Multiple file uploads simultaneously",
          "SQL Injection protection",
          "Email verification",
          "Retain user login details after session expiry",
          "Maintain scroll position when go back",
          "Continuous data loading while scrolling",
          "Item searching",
          "Forget password functionality"
        ]
      },
      {
        "type": "title",
        "content": "Further Development"
      },
      {
        "type": "paragraph",
        "content": "Deployed on Google Cloud Platform using Docker, Docker Compose, and Docker Swarm. It was containerised and scalable, featuring high availability, self-healing capability, and automated rollouts/rollbacks."
      }
    ]
  },
  {
    "id": "6",
    "name": "AI Play Game with Uncertainty",
    "description": "Coming soon, stay tuned!",
    "skills": "Python, Reinforcement Learning",
    "image": "/img/lunarlander.gif",
    "images": [

    ],
    "detailedDescription": [

    ]
  },
  {
    "id": "5",
    "name": "AI Plays DRAGONGAME - Search in Maze",
    "description": "Coming soon, stay tuned!",
    "skills": "Python, Data Structures, Algorithms, A* Search, Value Iteration, Policy Iteration",
    "image": "/img/ai-dragon.png",
    "images": [

    ],
    "detailedDescription": [

    ]
  },
  {
    "id": "4",
    "name": "DSA Implementation",
    "description": "I implemented various data structures from scratch, ranging from fundamental to advanced. I then applied these data structures along with algorithms to solve challenging problems.",
    "skills": "Python, Data Structures, Algorithms",
    "image": "/img/quicksort.gif",
    "images": [

    ],
    "detailedDescription": [

    ]
  },
  {
    "id": "3",
    "name": "2022 GovHack - Rintern",
    "description": "A solution connects businesses, communities, and individuals together, by identifying eligible grants and co-working opportunities.",
    "skills": "HTML, CSS, JavaScript",
    "image": "/img/rintern_logo.JPEG",
    "images": [
      "/img/govhack-home.png",
      "/img/govhack-home2.png",
      "/img/govhack-home3.png"
    ],
    "detailedDescription": [
      {
        "type": "title",
        "content": "Team Profile"
      },
      {
        "type": "paragraph",
        "content": "You can read more about this project here:"
      },
      {
        "type": "link",
        "title": "GovHack 2022 Hackerspace",
        "content": "https://2022.hackerspace.govhack.org/projects/rintern"
      }
    ]
  },
  {
    "id": "2",
    "name": "Anywhere Hotel Website",
    "description": "Design a hotel's website",
    "skills": "HTML, CSS, JavaScript, Figma",
    "image": "/img/anywhere-home.gif",
    "images": [
      "/img/anywhere-home.gif",
      "/img/anywhere-destination.gif",
      "/img/anywhere-exp.gif"
    ],
    "detailedDescription": [

    ]
  },
  {
    "id": "1",
    "name": "2048 - Fun Puzzle Game",
    "description": "A puzzle game where players merge tiles with matching numbers to reach the elusive 2048 tile.",
    "skills": "Python",
    "image": "/img/2048.gif",
    "images": [
      "/img/2048.gif",
      "/img/2048-start.png",
      "/img/2048-finish.png"
    ],
    "detailedDescription": [
      {
        "type": "title",
        "content": "Overview"
      },
      {
        "type": "paragraph",
        "content": "2048 is a single-player game where the player tries to construct a 2048 tile on a 4x4 grid."
      },
      {
        "type": "paragraph",
        "content": "Each turn, the player moves all tiles up, down, left, or right, by pressing w, s, a, or d respectively. Tiles move in the chosen direction until they hit a wall or another tile. If a tile hits another tile with the same value the two tiles merge (in the direction of the move) into a single tile with twice the value. After this move, and before the next, a random tile is placed on a random empty board position."
      },
      {
        "type": "paragraph",
        "content": "If the player constructs a 2048 tile they win and the game ends. If no more moves can be made that would change the game state, the player loses and the game ends."
      },
      {
        "type": "paragraph",
        "content": "Implemented a GUI-based 2048 application using tkinter, following the Apple MVC structure"
      }
    ]
  }
]
